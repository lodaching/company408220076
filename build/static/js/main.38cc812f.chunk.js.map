{"version":3,"sources":["Company.js","CompanyList.js","SearchBox.js","logos.js","Scroll.js","App.js","serviceWorker.js","index.js"],"names":["Company_76","className","src","this","props","pic","width","name","founded","React","Component","CompanyList_76","CompanyComponents","logos","map","company","Company","key","id","SearchBox_76","type","placeholder","onChange","searchChange","Scroll_76","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","filteredCompanies","filter","toLowerCase","includes","SearchBox","Scroll","CompanyList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4NAceA,E,uKAVP,OACI,yBAAKC,UAAU,oDACX,yBAAKC,IAAOC,KAAKC,MAAMC,IAAKC,MAAQ,QACpC,4BAAKH,KAAKC,MAAMG,MAChB,4CAAkBJ,KAAKC,MAAMI,c,GANpBC,IAAMC,WCkBhBC,E,uKAfP,IAAMC,EAAoBT,KAAKC,MAAMS,MAAMC,KAAI,SAACC,GAC5C,OACI,kBAACC,EAAD,CACIC,IAAOF,EAAQG,GACfX,KAASQ,EAAQR,KACjBC,QAAWO,EAAQP,QACnBH,IAAOU,EAAQV,SAI3B,OACI,6BAAMO,O,GAbWH,IAAMC,WCcpBS,E,uKAbP,OACI,yBAAKlB,UAAY,OACb,2BACIA,UAAY,mCACZmB,KAAO,SACPC,YAAc,mBACdC,SAAYnB,KAAKC,MAAMmB,oB,GARhBd,IAAMC,WCFpBG,EAAQ,CACjB,CACIK,GAAI,EACJX,KAAM,QACNC,QAAS,KACTH,IAAK,aAET,CACIa,GAAI,EACJX,KAAM,UACNC,QAAS,KACTH,IAAK,eAET,CACIa,GAAI,EACJX,KAAM,WACNC,QAAS,KACTH,IAAK,gBAET,CACIa,GAAI,EACJX,KAAM,QACNC,QAAS,KACTH,IAAK,aAET,CACIa,GAAI,EACJX,KAAM,SACNC,QAAS,KACTH,IAAK,cAET,CACIa,GAAI,EACJX,KAAM,OACNC,QAAS,KACTH,IAAK,YAET,CACIa,GAAI,EACJX,KAAM,KACNC,QAAS,KACTH,IAAK,UAET,CACIa,GAAI,EACJX,KAAM,OACNC,QAAS,KACTH,IAAK,YAET,CACIa,GAAI,EACJX,KAAM,YACNC,QAAS,KACTH,IAAK,iBAET,CACIa,GAAI,GACJX,KAAM,OACNC,QAAS,KACTH,IAAK,aC7CEmB,E,uKAVP,OACI,yBACIC,MAAS,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAEhEzB,KAAKC,MAAMyB,c,GANJpB,IAAMC,WCmCfoB,G,wDA7BX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAOV2B,eAAiB,SAAAC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAPzC,EAAKC,MAAQ,CACTxB,MAAOA,EACPqB,YAAa,IAJF,E,qDAYV,IAAD,OACEI,EAAoBnC,KAAKkC,MAAMxB,MAAM0B,QAAO,SAAAxB,GAC9C,OAAOA,EAAQR,KAAKiC,cACXC,SAAS,EAAKJ,MAAMH,YAAYM,kBAE7C,OACI,yBAAKvC,UAAY,MACb,4CACA,kBAACyC,EAAD,CAAcnB,aAAgBpB,KAAK4B,iBACnC,kBAACY,EAAD,KACI,kBAACC,EAAD,CAAgB/B,MAASyB,U,GAvB3B7B,IAAMC,Y,YCKJmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.38cc812f.chunk.js","sourcesContent":["import React from 'react';\n\nclass Company_76 extends React.Component {\n    render() {\n        return(\n            <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n                <img src = {this.props.pic} width = \"150\"/>\n                <h2>{this.props.name}</h2>\n                <p>founded year: {this.props.founded}</p>\n            </div>\n        );\n    };\n}\n\nexport default Company_76;","import Company_76 from './Company'\nimport React from 'react'\n\nclass CompanyList_76 extends React.Component {\n    render() {\n        const CompanyComponents = this.props.logos.map((company) => {\n            return (\n                <Company_76 \n                    key = {company.id}\n                    name =  {company.name} \n                    founded = {company.founded} \n                    pic = {company.pic}\n                />\n            )\n        });\n        return (\n            <div>{CompanyComponents}</div>\n        )\n    }\n}\nexport default CompanyList_76;\n","import React from 'react'\n\nclass SearchBox_76 extends React.Component {\n    render() {\n        return(\n            <div className = 'pa2'>\n                <input\n                    className = 'pa3 ba b--green bg-lightest-blue'\n                    type = 'search'\n                    placeholder = 'search companies'\n                    onChange = {this.props.searchChange}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SearchBox_76;","export const logos = [\n    {\n        id: 1,\n        name: 'Apple',\n        founded: 1976,\n        pic: 'apple.png'\n    },\n    {\n        id: 2,\n        name: 'Samsung',\n        founded: 1938,\n        pic: 'samsung.png'\n    },\n    {\n        id: 3,\n        name: 'Motorola',\n        founded: 1928,\n        pic: 'motorola.jpg'\n    },\n    {\n        id: 4,\n        name: 'Tesla',\n        founded: 2003,\n        pic: 'tesla.jpg'\n    },\n    {\n        id: 5,\n        name: 'Huawel',\n        founded: 1987,\n        pic: 'huawel.png'\n    },\n    {\n        id: 6,\n        name: 'oppo',\n        founded: 2004,\n        pic: 'oppo.png'\n    },\n    {\n        id: 7,\n        name: 'LG',\n        founded: 1947,\n        pic: 'lg.jpg'\n    },\n    {\n        id: 8,\n        name: 'Sony',\n        founded: 1946,\n        pic: 'sony.png'\n    },\n    {\n        id: 9,\n        name: 'Microsoft',\n        founded: 1975,\n        pic: 'microsoft.jpg'\n    },\n    {\n        id: 10,\n        name: 'Bose',\n        founded: 1964,\n        pic: 'bose.png'\n    }\n\n]","import React from 'react'\n\nclass Scroll_76 extends React.Component {\n    render() {\n        return(\n            <div\n                style = {{overflow: \"scroll\", border: '1px solid black', height: '500px'}}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Scroll_76;","import React from 'react'\nimport CompanyList_76 from './CompanyList'\nimport SearchBox_76 from './SearchBox'\nimport {logos} from './logos'\nimport Scroll_76 from './Scroll'\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logos: logos,\n            searchfield: '',\n        };\n    }\n\n    onSearchChange = event => {\n        this.setState({searchfield: event.target.value});\n    }\n\n    render(){\n        const filteredCompanies = this.state.logos.filter(company => {\n            return company.name.toLowerCase()\n                    .includes(this.state.searchfield.toLowerCase());\n        });\n        return (\n            <div className = 'tc'>\n                <h1>Company Logo</h1>\n                <SearchBox_76 searchChange = {this.onSearchChange}/>\n                <Scroll_76>\n                    <CompanyList_76 logos = {filteredCompanies}/>\n                </Scroll_76>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\nimport 'tachyons';\nimport {logos} from './logos'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}